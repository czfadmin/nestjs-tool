{
  "nestjs-tool.generateANewApplicationWorkspace": "Generate a new application workspace",
  "nestjs-tool.generateANewClass": "Generate a new class",
  "nestjs-tool.generateACliConfigurationFile": "Generate a cli configuration file",
  "nestjs-tool.generateAContorllerDeclaration": "Generate a contorller declaration",
  "nestjs-tool.generateACustomDecorator": "Generate a custom decorator",
  "nestjs-tool.generateAFilterDeclaration": "Generate a filter declaration",
  "nestjs-tool.generateAGatewayDeclaration": "Generate a gateway declaration",
  "nestjs-tool.generateAGuardDelcaration": "Generate a guard delcaration",
  "nestjs-tool.generateAnInterceptorDeclaration": "Generate an interceptor declaration",
  "nestjs-tool.generateAnInterface": "Generate an interface",
  "nestjs-tool.generateANewLibraryWithAMonorepo": "Generate a new library with a monorepo",
  "nestjs-tool.generateAMiddlewareDeclaration": "Generate a middleware declaration",
  "nestjs-tool.generateAModuleDeclaration": "Generate a module declaration",
  "nestjs-tool.generateAPipeDeclaration": "Generate a pipe declaration",
  "nestjs-tool.generateAGraphQLResolverDeclaration": "Generate a GraphQL resolver declaration",
  "nestjs-tool.generateANewCRUDDeclaration": "Generate a new CRUD declaration",
  "nestjs-tool.generateAServiceDeclaration": "Generate a service declaration",
  "nestjs-tool.generateANewApplicationWithAMonorepo": "Generate a new application with a monorepo",
  "nestjs-tool.quickOperation": "快速操作",
  "nestjs-tool.showTerminal": "当将命令发送到Terminal实例后, 是否显示Terminal, 默认为True",
  "nestjs-tool.shouldExecute": "指示应执行正在发送的文本，而不仅仅是将其插入终端中。 添加的字符为 \n 或 \r\n，具体取决于平台。 默认为 true",
  "nestjs-tool.noSpec": "Disable spec files generation",
  "nestjs-tool.spec": "Enforce spec files generation. (default: true)",
  "nestjs-tool.noFlat": "Enforce that directories are generated",
  "nestjs-tool.flat": "Enforce flat structure of generated element",
  "nestjs-tool.skipImport": "Skip importing (default: false)"
}